name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake libssl-dev zlib1g-dev
    
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --parallel 4
    
    - name: Run tests
      working-directory: ${{github.workspace}}/build
      run: |
        make test
        ./tests/test_order_book
        ./tests/test_matching_engine
    
    - name: Benchmark
      working-directory: ${{github.workspace}}
      run: |
        pip3 install websockets
        python3 scripts/benchmark_runner.py --orders 100 --uri ws://localhost:9001 &
        sleep 2
        ./build/matching_engine &
        sleep 5
        python3 scripts/benchmark_runner.py --orders 100
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: matching-engine
        path: build/matching_engine

  docker-build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t goquant-matching-engine:latest -f scripts/docker/Dockerfile .
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Push Docker image
      run: |
        docker tag goquant-matching-engine:latest ${{ secrets.DOCKERHUB_USERNAME }}/goquant-matching-engine:latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/goquant-matching-engine:latest